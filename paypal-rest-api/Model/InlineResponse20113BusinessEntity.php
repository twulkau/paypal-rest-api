<?php
/**
 * InlineResponse20113BusinessEntity
 *
 * PHP version 5
 *
 * @category Class
 * @package  PayPal\RestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PayPal APIs
 *
 * # Getting Started  ## Step 1: Fork the collection using Run in Postman  [](https://god.gw.postman.com/run-collection/19024122-92a85d0e-51e7-47da-9f83-c45dcb1cdf24?action=collection/fork&collection-url=entityId=19024122-92a85d0e-51e7-47da-9f83-c45dcb1cdf24&entityType=collection&workspaceId=345300e6-346e-42e0-aed1-53717919aef0#?env[PayPal%20Override%20Env]=W3sia2V5IjoiUGxlYXNlIE5vdGUgLS0+IiwidmFsdWUiOiI8IFBheVBhbCBQdWJsaWMgQ29sbGVjdGlvbiBjb21lcyB3aXRoIGRlZmF1bHQgcHVibGljIHNldCBvZiBjcmVkZW50aWFscyBzdG9yZWQgYXQgdGhlIENvbGxlY3Rpb24gbGV2ZWwuIFxuVGhpcyBlbnZpcm9ubWVudCBvdmVycmlkZXMgdGhvc2UgZGVmYXVsdCB2YXJpYWJsZXMuIFlvdSBtYXkgYnJpbmcgeW91ciBvd24gY3JlZGVudGlhbHMgZnJvbSBQYXlQYWwgRGV2ZWxvcGVyIERhc2hib2FyZCBhbmQgcGFzdGUgdGhlbSBoZXJlLiBEbyBub3QgZm9yZ290IHRvIGVuYWJsZSB0aGUgdmFpYWJsZSBieSBjaGVja2luZyB0aGUgYm94IGFuZCBoaXQgXCJTYXZlXCIgYmVmb3JlIGludm9raW5nIHRoZSBQYXlQYWwgQVBJcy4gPiIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY2xpZW50X2lkIiwidmFsdWUiOiI8IGNvcHkgY3JlZGVudGlhbHMgZnJvbSB5b3VyIGRldmVsb3Blci5wYXlwYWwuY29tIGFuZCBwYXN0ZSB0aGVtIGhlcmUgPiIsImVuYWJsZWQiOmZhbHNlfSx7ImtleSI6ImNsaWVudF9zZWNyZXQiLCJ2YWx1ZSI6IjwgY29weSBjcmVkZW50aWFscyBmcm9tIHlvdXIgZGV2ZWxvcGVyLnBheXBhbC5jb20gYW5kIHBhc3RlIHRoZW0gaGVyZSA+IiwiZW5hYmxlZCI6ZmFsc2V9XQ==)  [![](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/19024122-92a85d0e-51e7-47da-9f83-c45dcb1cdf24?action=collection/fork&collection-url=entityId=19024122-92a85d0e-51e7-47da-9f83-c45dcb1cdf24&entityType=collection&workspaceId=345300e6-346e-42e0-aed1-53717919aef0#?env[PayPal%20Override%20Env]=W3sia2V5IjoiUGxlYXNlIE5vdGUgLS0+IiwidmFsdWUiOiI8IFBheVBhbCBQdWJsaWMgQ29sbGVjdGlvbiBjb21lcyB3aXRoIGRlZmF1bHQgcHVibGljIHNldCBvZiBjcmVkZW50aWFscyBzdG9yZWQgYXQgdGhlIENvbGxlY3Rpb24gbGV2ZWwuIFxuVGhpcyBlbnZpcm9ubWVudCBvdmVycmlkZXMgdGhvc2UgZGVmYXVsdCB2YXJpYWJsZXMuIFlvdSBtYXkgYnJpbmcgeW91ciBvd24gY3JlZGVudGlhbHMgZnJvbSBQYXlQYWwgRGV2ZWxvcGVyIERhc2hib2FyZCBhbmQgcGFzdGUgdGhlbSBoZXJlLiBEbyBub3QgZm9yZ290IHRvIGVuYWJsZSB0aGUgdmFpYWJsZSBieSBjaGVja2luZyB0aGUgYm94IGFuZCBoaXQgXCJTYXZlXCIgYmVmb3JlIGludm9raW5nIHRoZSBQYXlQYWwgQVBJcy4gPiIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY2xpZW50X2lkIiwidmFsdWUiOiI8IGNvcHkgY3JlZGVudGlhbHMgZnJvbSB5b3VyIGRldmVsb3Blci5wYXlwYWwuY29tIGFuZCBwYXN0ZSB0aGVtIGhlcmUgPiIsImVuYWJsZWQiOmZhbHNlfSx7ImtleSI6ImNsaWVudF9zZWNyZXQiLCJ2YWx1ZSI6IjwgY29weSBjcmVkZW50aWFscyBmcm9tIHlvdXIgZGV2ZWxvcGVyLnBheXBhbC5jb20gYW5kIHBhc3RlIHRoZW0gaGVyZSA+IiwiZW5hYmxlZCI6ZmFsc2V9XQ==)  ## Step 2: Get your access token  An access token is automatically generated using a default `client_id` and `secret`. PayPal recommends using your own `client_id` and `secret` from the [Developer Dashboard](https://www.paypal.com/signin?intent=developer&returnUri=https%3A%2F%2Fdeveloper.paypal.com%2Fdeveloper%2Fapplication) by entering the values under the **Variables** tab. A pre-request script will generate and manage the `access_token` automatically.  > **Note:** Your developer account `client_id` and `secret` may have a different scope than the default `client_id` and `secret`.  ## Step 3: Make your first API call  PayPal recommends starting with the Orders API. These steps will use the Orders API to create an order and capture payment using [sandbox accounts](https://developer.paypal.com/developer/accounts) linked to your Developer Dashboard account.  To create an order:  1. In your workspace, navigate to your fork of the PayPal collection. 1. Select **Orders > Create Order**. 1. Select the **Send** button to create the order. On a successful call, the API returns a 201 order created response code. 1. In the response, find the **approve** link. 1. Open the **approve** link in a browser. 1. Log in with your Developer Dashboard Sandbox Personal Account credentials. You can find those credentials by logging into the Developer Dashboard and selecting **Sandbox > Account** 1. Select the **Continue** button. Payment has now been made.  To capture payment:  1. In the response of the order you created, find the `order_id`. 1. In the **Variables** tab, enter the `order_id` number. 1. Select **Orders > Capture payment for order**. 1. Select **Send**. On a successful call, the API returns a 201 order created response code.  Your order has been created and payment has been captured. You can verify the transaction in both the sandbox personal account and the sandbox business account.  ![Buyer Payment Verification](https://www.paypalobjects.com/devdoc/transaction-details-buyer.png) ![Seller Payment Verification](https://www.paypalobjects.com/devdoc/transaction-details-seller.png)
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace PayPal\RestApi\Model;

use \ArrayAccess;
use \PayPal\RestApi\ObjectSerializer;

/**
 * InlineResponse20113BusinessEntity Class Doc Comment
 *
 * @category Class
 * @package  PayPal\RestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse20113BusinessEntity implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_201_13_business_entity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'beneficial_owners' => '\PayPal\RestApi\Model\InlineResponse20113BusinessEntityBeneficialOwners',
        'declarations' => '\PayPal\RestApi\Model\V3customermanagedaccountsBusinessEntityDeclarations[]',
        'identification_documents' => '\PayPal\RestApi\Model\InlineResponse20113BusinessEntityIdentificationDocuments[]',
        'incorporation_details' => 'object',
        'names' => '\PayPal\RestApi\Model\InlineResponse20113BusinessEntityNames[]',
        'office_bearers' => '\PayPal\RestApi\Model\InlineResponse20113BusinessEntityOfficeBearers[]',
        'phone_numbers' => '\PayPal\RestApi\Model\InlineResponse20113BusinessEntityPhoneNumbers[]',
        'registered_business_address' => '\PayPal\RestApi\Model\V3customermanagedaccountsBusinessEntityRegisteredBusinessAddress',
        'type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'beneficial_owners' => null,
        'declarations' => null,
        'identification_documents' => null,
        'incorporation_details' => null,
        'names' => null,
        'office_bearers' => null,
        'phone_numbers' => null,
        'registered_business_address' => null,
        'type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'beneficial_owners' => 'beneficial_owners',
        'declarations' => 'declarations',
        'identification_documents' => 'identification_documents',
        'incorporation_details' => 'incorporation_details',
        'names' => 'names',
        'office_bearers' => 'office_bearers',
        'phone_numbers' => 'phone_numbers',
        'registered_business_address' => 'registered_business_address',
        'type' => 'type'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'beneficial_owners' => 'setBeneficialOwners',
        'declarations' => 'setDeclarations',
        'identification_documents' => 'setIdentificationDocuments',
        'incorporation_details' => 'setIncorporationDetails',
        'names' => 'setNames',
        'office_bearers' => 'setOfficeBearers',
        'phone_numbers' => 'setPhoneNumbers',
        'registered_business_address' => 'setRegisteredBusinessAddress',
        'type' => 'setType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'beneficial_owners' => 'getBeneficialOwners',
        'declarations' => 'getDeclarations',
        'identification_documents' => 'getIdentificationDocuments',
        'incorporation_details' => 'getIncorporationDetails',
        'names' => 'getNames',
        'office_bearers' => 'getOfficeBearers',
        'phone_numbers' => 'getPhoneNumbers',
        'registered_business_address' => 'getRegisteredBusinessAddress',
        'type' => 'getType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['beneficial_owners'] = isset($data['beneficial_owners']) ? $data['beneficial_owners'] : null;
        $this->container['declarations'] = isset($data['declarations']) ? $data['declarations'] : null;
        $this->container['identification_documents'] = isset($data['identification_documents']) ? $data['identification_documents'] : null;
        $this->container['incorporation_details'] = isset($data['incorporation_details']) ? $data['incorporation_details'] : null;
        $this->container['names'] = isset($data['names']) ? $data['names'] : null;
        $this->container['office_bearers'] = isset($data['office_bearers']) ? $data['office_bearers'] : null;
        $this->container['phone_numbers'] = isset($data['phone_numbers']) ? $data['phone_numbers'] : null;
        $this->container['registered_business_address'] = isset($data['registered_business_address']) ? $data['registered_business_address'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets beneficial_owners
     *
     * @return \PayPal\RestApi\Model\InlineResponse20113BusinessEntityBeneficialOwners
     */
    public function getBeneficialOwners()
    {
        return $this->container['beneficial_owners'];
    }

    /**
     * Sets beneficial_owners
     *
     * @param \PayPal\RestApi\Model\InlineResponse20113BusinessEntityBeneficialOwners $beneficial_owners beneficial_owners
     *
     * @return $this
     */
    public function setBeneficialOwners($beneficial_owners)
    {
        $this->container['beneficial_owners'] = $beneficial_owners;

        return $this;
    }

    /**
     * Gets declarations
     *
     * @return \PayPal\RestApi\Model\V3customermanagedaccountsBusinessEntityDeclarations[]
     */
    public function getDeclarations()
    {
        return $this->container['declarations'];
    }

    /**
     * Sets declarations
     *
     * @param \PayPal\RestApi\Model\V3customermanagedaccountsBusinessEntityDeclarations[] $declarations declarations
     *
     * @return $this
     */
    public function setDeclarations($declarations)
    {
        $this->container['declarations'] = $declarations;

        return $this;
    }

    /**
     * Gets identification_documents
     *
     * @return \PayPal\RestApi\Model\InlineResponse20113BusinessEntityIdentificationDocuments[]
     */
    public function getIdentificationDocuments()
    {
        return $this->container['identification_documents'];
    }

    /**
     * Sets identification_documents
     *
     * @param \PayPal\RestApi\Model\InlineResponse20113BusinessEntityIdentificationDocuments[] $identification_documents identification_documents
     *
     * @return $this
     */
    public function setIdentificationDocuments($identification_documents)
    {
        $this->container['identification_documents'] = $identification_documents;

        return $this;
    }

    /**
     * Gets incorporation_details
     *
     * @return object
     */
    public function getIncorporationDetails()
    {
        return $this->container['incorporation_details'];
    }

    /**
     * Sets incorporation_details
     *
     * @param object $incorporation_details incorporation_details
     *
     * @return $this
     */
    public function setIncorporationDetails($incorporation_details)
    {
        $this->container['incorporation_details'] = $incorporation_details;

        return $this;
    }

    /**
     * Gets names
     *
     * @return \PayPal\RestApi\Model\InlineResponse20113BusinessEntityNames[]
     */
    public function getNames()
    {
        return $this->container['names'];
    }

    /**
     * Sets names
     *
     * @param \PayPal\RestApi\Model\InlineResponse20113BusinessEntityNames[] $names names
     *
     * @return $this
     */
    public function setNames($names)
    {
        $this->container['names'] = $names;

        return $this;
    }

    /**
     * Gets office_bearers
     *
     * @return \PayPal\RestApi\Model\InlineResponse20113BusinessEntityOfficeBearers[]
     */
    public function getOfficeBearers()
    {
        return $this->container['office_bearers'];
    }

    /**
     * Sets office_bearers
     *
     * @param \PayPal\RestApi\Model\InlineResponse20113BusinessEntityOfficeBearers[] $office_bearers office_bearers
     *
     * @return $this
     */
    public function setOfficeBearers($office_bearers)
    {
        $this->container['office_bearers'] = $office_bearers;

        return $this;
    }

    /**
     * Gets phone_numbers
     *
     * @return \PayPal\RestApi\Model\InlineResponse20113BusinessEntityPhoneNumbers[]
     */
    public function getPhoneNumbers()
    {
        return $this->container['phone_numbers'];
    }

    /**
     * Sets phone_numbers
     *
     * @param \PayPal\RestApi\Model\InlineResponse20113BusinessEntityPhoneNumbers[] $phone_numbers phone_numbers
     *
     * @return $this
     */
    public function setPhoneNumbers($phone_numbers)
    {
        $this->container['phone_numbers'] = $phone_numbers;

        return $this;
    }

    /**
     * Gets registered_business_address
     *
     * @return \PayPal\RestApi\Model\V3customermanagedaccountsBusinessEntityRegisteredBusinessAddress
     */
    public function getRegisteredBusinessAddress()
    {
        return $this->container['registered_business_address'];
    }

    /**
     * Sets registered_business_address
     *
     * @param \PayPal\RestApi\Model\V3customermanagedaccountsBusinessEntityRegisteredBusinessAddress $registered_business_address registered_business_address
     *
     * @return $this
     */
    public function setRegisteredBusinessAddress($registered_business_address)
    {
        $this->container['registered_business_address'] = $registered_business_address;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


